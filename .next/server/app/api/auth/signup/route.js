"use strict";(()=>{var e={};e.id=654,e.ids=[654],e.modules={11185:e=>{e.exports=require("mongoose")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6113:e=>{e.exports=require("crypto")},52652:(e,r,s)=>{s.r(r),s.d(r,{originalPathname:()=>f,patchFetch:()=>v,requestAsyncStorage:()=>g,routeModule:()=>c,serverHooks:()=>w,staticGenerationAsyncStorage:()=>h});var t={};s.r(t),s.d(t,{POST:()=>m});var n=s(49303),a=s(88716),o=s(60670),i=s(42023),u=s.n(i),l=s(69409),p=s(73672),d=s(7410);async function m(e){let{email:r,password:s,name:t,role:n}=await e.json();await (0,p.Z)();let a=d.z.object({email:d.z.string().email({message:"Invalid email address"}),password:d.z.string().min(6,{message:"Password must be at least 6 characters long"}),name:d.z.string().min(2,{message:"Name must be at least 2 characters long"}),role:d.z.enum(["student","working professional"],{message:"Invalid role"})});try{a.parse({email:r,password:s,name:t,role:n})}catch(e){return new Response(JSON.stringify({message:e.errors.map(e=>e.message)}),{status:400})}if(await l.Z.findOne({email:r}))return new Response(JSON.stringify({message:"User already exists"}),{status:409});let o=await u().hash(s,10),i=new l.Z({name:t,email:r,password:o,role:n});await i.save();let{password:m,...c}=i.toObject();return new Response(JSON.stringify({message:"User created successfully",user:c}),{status:201})}let c=new n.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/auth/signup/route",pathname:"/api/auth/signup",filename:"route",bundlePath:"app/api/auth/signup/route"},resolvedPagePath:"/Users/yash/DevProjects/fullStack/test.ai/src/app/api/auth/signup/route.js",nextConfigOutput:"",userland:t}),{requestAsyncStorage:g,staticGenerationAsyncStorage:h,serverHooks:w}=c,f="/api/auth/signup/route";function v(){return(0,o.patchFetch)({serverHooks:w,staticGenerationAsyncStorage:h})}},73672:(e,r,s)=>{s.d(r,{Z:()=>i});var t=s(11185),n=s.n(t);let a=process.env.MONGODB_URI;if(!a)throw Error("Please define the MONGODB_URI environment variable inside .env.local");let o=global.mongoose;o||(o=global.mongoose={conn:null,promise:null});let i=async function(){if(o.conn)return o.conn;o.promise||(console.log("Connecting to MongoDB..."),o.promise=n().connect(a,{bufferCommands:!1}).then(e=>(console.log("Connected to MongoDB"),e)));try{o.conn=await o.promise}catch(e){throw o.promise=null,console.error("Failed to connect to MongoDB:",e),e}return o.conn}},69409:(e,r,s)=>{s.d(r,{Z:()=>o});var t=s(11185),n=s.n(t);let a=new(n()).Schema({name:{type:String,required:[!0,"Name is required"]},email:{type:String,required:[!0,"Email is required"],unique:!0,match:[/.+\@.+\..+/,"Please enter a valid email"]},password:{type:String,required:[!0,"Password is required"]},role:{type:String,enum:["student","working professional"],required:[!0,"Role is required"],default:"student"}},{timestamps:!0}),o=n().models.User||n().model("User",a)}};var r=require("../../../../webpack-runtime.js");r.C(e);var s=e=>r(r.s=e),t=r.X(0,[948,160],()=>s(52652));module.exports=t})();